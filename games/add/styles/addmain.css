/* Addition Game - Fixed Styles with game area relative positioning */

/* CSS Custom Properties for sum bar dimensions */
:root {
    --game-area-width: 100vw; /* Initial value, will be updated by JavaScript with actual game area width */
    --sum-box-size: calc(var(--game-area-width) * 0.07); /* 7% of actual game area width */
    --sum-bar-width-multiplier: 6.5; /* How many box widths for sum bar */
    --plus-sign-size: calc(var(--game-area-width) * 0.07); /* 7% of actual game area width */
}

/* Prevent scrolling - game always fits on screen */
html, body {
    overflow: hidden !important;
    height: 100vh;
    max-height: 100vh;
    margin: 0;
    padding: 0;
}

/* Ensure game fits perfectly */
body {
    display: flex;
    flex-direction: column;
}

/* Game area sections layout with initial fade state */
.game-area {
    display: block;
    opacity: 0;
    transition: opacity 1s ease-in-out;
    position: relative;
    /* Width, margins, and bottom spacing set by ButtonBar system */
    /* DO NOT override these - they are calculated by the universal system */
}

.game-area.loaded {
    opacity: 1;
}

/* Left side - icon placement area relative to game area */
.left-side {
    position: absolute;
    left: 6%; /* 6% of game area width */
    width: 34%; /* 40% - 6% = 34% width */
    bottom: 30%; /* 30% of game area height from bottom */
    height: 60%; /* 90% - 30% = 60% height */
    /* Visual debugging - remove in production */
    /* border: 1px dashed rgba(255, 0, 0, 0.3); */
    transition: background-color 0.2s ease;
    z-index: 1;
}

/* Middle section - central bar with plus sign */
.middle-section {
    position: absolute;
    left: 46%; /* Center section 46%-54% */
    width: 8%; /* 8% width as specified */
    top: 0;
    height: 100%;
    display: flex;
    justify-content: center;
    align-items: center;
    background: linear-gradient(135deg, #f8f9fa, #e9ecef);
    z-index: 0; /* Below game area background and rainbow */
}

.plus-sign {
    display: flex;
    justify-content: center;
    align-items: center;
    /* Red circle: 7% of game area width (3.5% radius) */
    width: var(--plus-sign-size);
    height: var(--plus-sign-size);
    /* max-width: 70px; */ /* COMMENTED OUT: keeping for potential future use */
    /* max-height: 70px; */ /* COMMENTED OUT: keeping for potential future use */
    /* min-width: 35px; */ /* COMMENTED OUT: keeping for potential future use */
    /* min-height: 35px; */ /* COMMENTED OUT: keeping for potential future use */
    background: #dc3545;
    border-radius: 50%;
    box-shadow: 0 8px 25px rgba(220, 53, 69, 0.3);
    z-index: 10; /* Higher z-index as button furniture */
    position: relative;
}

.plus-sign i {
    font-size: calc(var(--plus-sign-size) * 0.4);
    /* max-font-size: 28px; */ /* COMMENTED OUT: keeping for potential future use */
    /* min-font-size: 14px; */ /* COMMENTED OUT: keeping for potential future use */
    color: white;
    font-weight: bold;
}

/* Right side - icon placement area relative to game area */
.right-side {
    position: absolute;
    left: 60%; /* 60% of game area width */
    width: 34%; /* 94% - 60% = 34% width */
    bottom: 30%; /* 30% of game area height from bottom */
    height: 60%; /* 90% - 30% = 60% height */
    /* Visual debugging - remove in production */
    /* border: 1px dashed rgba(0, 255, 0, 0.3); */
    transition: background-color 0.2s ease;
    z-index: 1;
}

/* Separate pulse areas for green flashing */
.left-pulse-area {
    position: absolute;
    left: 0; /* Full left area from 0% */
    width: 46%; /* Full left area to 46% */
    top: 0; /* Full height */
    height: 100%; /* Full height of game area */
    pointer-events: none; /* Don't interfere with interactions */
    transition: background-color 0.2s ease;
    z-index: 2; /* Above game areas but below icons */
}

.right-pulse-area {
    position: absolute;
    left: 54%; /* Full right area from 54% */
    width: 46%; /* Full right area to 100% */
    top: 0; /* Full height */
    height: 100%; /* Full height of game area */
    pointer-events: none; /* Don't interfere with interactions */
    transition: background-color 0.2s ease;
    z-index: 2; /* Above game areas but below icons */
}

/* Area flashing styles - target the pulse areas */
.left-pulse-area.area-flash,
.right-pulse-area.area-flash {
    background-color: rgba(144, 238, 144, 0.2) !important;
    transition: background-color 1s ease-in-out;
}

/* Icons - positioned relative to game area WITHOUT universal transform */
.game-icon {
    position: absolute;
    z-index: 5; /* Above rainbow and game areas, below plus and sum */
    animation: fadeIn 0.5s ease-in;
    pointer-events: none;
    user-select: none;
    text-shadow: 2px 2px 4px rgba(0,0,0,0.3);
    transition: filter 0.3s ease;
    animation-fill-mode: both;
    /* NO TRANSFORM HERE - applied only to game area icons at creation */
}

@keyframes fadeIn {
    from { 
        opacity: 0; 
        /* No universal transform - applied per icon type */
    }
    to { 
        opacity: 1; 
        /* No universal transform - applied per icon type */
    }
}

/* Icon jiggle animation for hints */
@keyframes iconJiggle {
    0%, 100% { transform: translateX(0); }
    10%, 30%, 50%, 70%, 90% { transform: translateX(-3px); }
    20%, 40%, 60%, 80% { transform: translateX(3px); }
}

/* Sum row at bottom - width and height based on box parameter */
.sum-row {
    position: absolute;
    bottom: 3%; /* 3% above button bar */
    left: 50%;
    transform: translateX(-50%);
    display: flex;
    align-items: center;
    gap: 2%;
    z-index: 15; /* Higher than everything else */
    
    width: calc(var(--sum-box-size) * var(--sum-bar-width-multiplier)); /* DYNAMIC: 7vw * 7 = 49vw */
    height: calc(var(--sum-box-size) + 2vh); /* DYNAMIC: box height + padding */
    max-height: 90px;
    min-height: 55px;
    
    background: rgba(255, 255, 255, 0.95);
    padding: 1vh 2%;
    border-radius: 15px;
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.15);
    border: 2px solid #e0e0e0;
    box-sizing: border-box;
    opacity: 0;
    transition: opacity 1s ease-in-out;
}

.sum-row.loaded {
    opacity: 1;
}

/* Prevent sum row from fading */
.sum-row.fade-out,
.sum-row.fade-in {
    animation: none !important;
    opacity: 1 !important;
    transform: translateX(-50%) !important;
}

.sum-plus-sign,
.sum-equals-sign {
    font-size: clamp(21px, 5.2vw, 42px); /* INCREASED: Was clamp(16px, 4vw, 32px) - 30% larger */
    font-weight: bold;
    color: #333;
    min-width: clamp(26px, 3.9vw, 52px); /* INCREASED: Was clamp(20px, 3vw, 40px) - 30% larger */
    text-align: center;
    flex-shrink: 0;
}

.left-sum-box,
.right-sum-box,
.total-sum-box {
    width: var(--sum-box-size); /* DYNAMIC: Uses CSS parameter */
    height: var(--sum-box-size); /* DYNAMIC: Square boxes using same parameter */
    /* max-width: 80px; */ /* COMMENTED OUT: keeping for potential future use */
    /* max-height: 80px; */ /* COMMENTED OUT: keeping for potential future use */
    /* min-width: 50px; */ /* COMMENTED OUT: keeping for potential future use */
    /* min-height: 50px; */ /* COMMENTED OUT: keeping for potential future use */
    flex-shrink: 0;
}

/* Input boxes for addition game sum bar - GAME SPECIFIC, not universal buttons */
.input-box {
    background: white;
    border: 4px solid #007bff;
    border-radius: 15px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: clamp(18px, calc(var(--sum-box-size) * 0.52), 42px); /* DYNAMIC: Based on box size parameter */
    font-weight: bold;
    color: #333;
    box-shadow: 0 8px 25px rgba(0, 123, 255, 0.3);
    transition: all 0.3s ease;
}

.input-box.flashing {
    animation: flashingBox 1s ease-in-out infinite;
}

.input-box.filled {
    background: #e8f5e8;
    border-color: #28a745;
    animation: none;
}

.input-box.box-flash {
    background: rgba(144, 238, 144, 0.3) !important;
    border-color: #28a745 !important;
    transition: all 1s ease-in-out;
}

@keyframes flashingBox {
    0%, 100% {
        box-shadow: 0 8px 25px rgba(0, 123, 255, 0.3);
        transform: scale(1);
    }
    50% {
        box-shadow: 0 12px 35px rgba(0, 123, 255, 0.6);
        transform: scale(1.05);
    }
}

.check-mark {
    font-size: clamp(21px, 5.2vw, 42px); /* INCREASED: Was clamp(16px, 4vw, 32px) - 30% larger */
    color: #28a745;
    opacity: 0;
    transition: opacity 0.5s ease;
    min-width: clamp(26px, 5.2vw, 52px); /* INCREASED: Was clamp(20px, 4vw, 40px) - 30% larger */
    text-align: center;
    flex-shrink: 0;
    margin-left: 1.5%; /* Additional space before tick mark */
}

.check-mark.visible {
    opacity: 1;
}

/* Fade animations - FIXED: Exclude sum row */
.fade-out:not(.sum-row) {
    animation: fadeOut 1s ease-out forwards;
}

.fade-in:not(.sum-row) {
    animation: fadeIn 1s ease-in forwards;
}

@keyframes fadeOut {
    from {
        opacity: 1;
        /* No universal transform - applied per icon type */
    }
    to {
        opacity: 0;
        /* No universal transform - applied per icon type */
    }
}

/* Enhanced completion effects */
.completion-effect {
    pointer-events: none;
}
